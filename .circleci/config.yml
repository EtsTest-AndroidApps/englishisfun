version: 2.1

references:
  container_config: &container_config
    docker:
      - image: circleci/android:api-29

    working_directory: ~/data

    environment:
      JVM_OPTS: -Xmx3g

commands:
  generate-gradle-checksums:
    steps:
      - run:
          name: Generate Gradle checksums
          command: |
            # This finds all *.kt files and generates checksums for caching
            find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
            cat gradle-checksums.txt
  restore-gradle-cache:
    description: Restore the cache of ~/.gradle based on the local build files.
    steps:
      - generate-gradle-checksums
      - restore_cache:
          keys:
            - gradle-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "gradle-checksums.txt" }}
            - gradle-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-
  save-gradle-cache:
    description: Cache the contents of ~/.gradle based on the local build files.
    steps:
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "gradle-checksums.txt" }}

jobs:
  update_dependency_cache:
    <<: *container_config
    steps:
      - checkout
      - restore-gradle-cache
      - run: chmod +x gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save-gradle-cache

  unit_test:
    <<: *container_config
    steps:
      - checkout
      - restore-gradle-cache
      - run: echo 'export GOOGLE_SERVICES_JSON="$GOOGLE_SERVICES_JSON"' >> $BASH_ENV
      - run: echo $GOOGLE_SERVICES_JSON | base64 -di > app/google-services.json
      # --stacktrace is just a temporary flag to help with debugging of ConcurrentModificationException that happens occasionally
      - run: ./gradlew testDevDebugUnitTest --stacktrace
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - run:
          name: Save test reports
          command: |
            mkdir -p ~/reports/
            cp -R ./feature_abbreviation/build/reports/* ~/reports/feature_abbreviation
          when: always
      - store_artifacts:
          path: ~/reports/
          destination: reports

workflows:
  version: 2
  check:
    jobs:
      - update_dependency_cache
      - unit_test:
          requires:
            - update_dependency_cache
