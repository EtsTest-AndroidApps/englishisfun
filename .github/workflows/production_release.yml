name: Production Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  secrets:
    name: Secrets
    runs-on: ubuntu-latest
    env:
      MARVEL_KEY_PUBLIC: ${{ secrets.MARVEL_KEY_PUBLIC }}
      MARVEL_KEY_PRIVATE: ${{ secrets.MARVEL_KEY_PRIVATE }}
      SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      SIGNING_STORE_FILE: ${{ secrets.SIGNING_STORE_FILE }}
      SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      KEYSTORE: ${{ secrets.KEYSTORE }}
      VERSION_CODE: ${{ secrets.VERSION_CODE }}

  unitTest:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: secrets
    steps:
      - uses: actions/checkout@v2
      - name: Unit tests
        run: bash ./gradlew testDevDebugUnitTest

  buildAPK:
    name: Build Signed APK
    runs-on: ubuntu-latest
    needs: unitTest
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Update release version
        run: |
          latest_release="$(git describe --match '[0-9]*.[0-9]*.[0-9]*' --abbrev=0 --tags)"
          version_name="\"$latest_release\""
          sed -i "s/BuildAndroidConfig.VERSION_NAME/$version_name/g" app/build.gradle.kts
          sed -i "s/BuildAndroidConfig.VERSION_CODE/$VERSION_CODE/g" app/build.gradle.kts
      - name: Add secrets
        run: |
          echo "marvel.key.public=$MARVEL_KEY_PUBLIC" >> local.properties
          echo "marvel.key.private=$MARVEL_KEY_PRIVATE" >> local.properties
          echo "signing.key.alias=$SIGNING_KEY_ALIAS" >> local.properties
          echo "signing.key.password=$SIGNING_KEY_PASSWORD" >> local.properties
          echo "signing.store.file=$SIGNING_STORE_FILE" >> local.properties
          echo "signing.store.password=$SIGNING_STORE_PASSWORD" >> local.properties
          echo $GOOGLE_SERVICES_JSON | base64 -di > app/google-services.json
          echo $KEYSTORE | base64 -di > app/keystore.jks
      - name: Build .APK
        run: bash ./gradlew :app:assembleProdRelease
      - name: Upload APK artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release
          path: app/build/outputs/apk/prod/release/app-prod-release.apk

  uploadAPK:
    name: Upload APK to Google Play
    runs-on: ubuntu-latest
    needs: buildAPK
    steps:
      - uses: actions/checkout@v2
      - name: Download app APK
        uses: actions/download-artifact@v1
        with:
          name: app-release
      - name: Upload Android Release to Play Store
        uses: r0adkll/upload-google-play@v1.0.4
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT }}
          packageName: com.jpaya.englishisfun
          releaseFile: app-release/app-prod-release.apk
          track: internal
          whatsNewDirectory: whatsnew
